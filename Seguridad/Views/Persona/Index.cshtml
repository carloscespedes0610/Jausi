@model List<Seguridad.Models.VM.clsPersonaVM>
@{
    ViewBag.Title = "Index";
}



@(Html.DevExtreme().DataGrid<Seguridad.Models.VM.clsPersonaVM>()
            .ID("grid")
            .DataSource(Model, "PersonaId")
            .AllowColumnResizing(true)
            .ShowColumnLines(false)
            .ShowRowLines(true)
            .ShowBorders(true)
            .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
            .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
            .Paging(p => p.PageSize(10))
            .Width("100%")
            .RowAlternationEnabled(true)
            .Selection(s => s.Mode(SelectionMode.Single))
            //.Editing(e => e.Mode(GridEditMode.Row))
            .OnCellPrepared("onCellPrepared")
            //.Selection(s => s.Mode(SelectionMode.Multiple))
            .Export(e => e.Enabled(false).FileName("Persona").ExcelWrapTextEnabled(false))
            .Columns(columns =>
            {
                if (Model != null && Model.Capacity > 0)
                {
                    if (Model.ElementAt(0).PersonaID != 0)
                    {
                        columns.AddFor(m => m.PersonaID).Width(100);
                    }

                    if (!(Model.ElementAt(0).PersonaNombre.IsEmpty()))
                    {
                        columns.AddFor(m => m.PersonaNombre).Width(100);
                    }

                    if (!(Model.ElementAt(0).PersonaSexo.IsEmpty()))
                    {
                        columns.AddFor(m => m.PersonaSexo).Width(100);
                    }

                    if (!(Model.ElementAt(0).PersonaEstadoCivil.IsEmpty()))
                    {
                        columns.AddFor(m => m.PersonaEstadoCivil).Width(100);
                    }

                    if (Model.ElementAt(0).PersonaFechaNacimiento.CompareTo(DateTime.MinValue) != 0)
                    {
                        columns.AddFor(m => m.PersonaFechaNacimiento).Width(100);
                    }

                    if (!(Model.ElementAt(0).PersonaTelefono.IsEmpty()))
                    {
                        columns.AddFor(m => m.PersonaTelefono).Width(100);
                    }
                }
                else {
                    Html.DisplayText("Consulta sin Resultados");
                }







                //columns.Add().DataField("Edit").Caption("").Width(30).AllowFiltering(false).CellTemplate(Html.ActionLink(" ", "Edit", new { id = "TipoUsuarioId" }, new { @class = "dx-icon-edit" }).ToHtmlString().Replace("TipoUsuarioId", "<%= data.TipoUsuarioId %>"));
                //columns.Add().DataField("Delete").Caption("").Width(30).AllowFiltering(false).CellTemplate(Html.ActionLink(" ", "Delete", new { id = "TipoUsuarioId" }, new { @class = "dx-icon-trash" }).ToHtmlString().Replace("TipoUsuarioId", "<%= data.TipoUsuarioId %>"));
                //columns.Add().DataField("Details").Caption("").Width(30).AllowFiltering(false).CellTemplate(Html.ActionLink(" ", "Details", new { id = "TipoUsuarioId" }, new { @class = "fa fa-info-circle" }).ToHtmlString().Replace("TipoUsuarioId", "<%= data.TipoUsuarioId %>"));
            })
)

<script>
    function loadPage() {
        var id = 10;
        var PlanId = getRowSelectedId();

        var url = "@Url.Action("Edit", "TipoUsuario", new { id="param-id", PlanId="param-PlanId" })";
        url = url.replace("param-id", id)
                .replace("param-PlanId", PlanId);

        window.location.href = url;
    }

    function OnClick(data) {
    $.ajax({
        url: '@Url.Action("Edit", "TipoUsuario")',
        data: { id: 1 }
    });
    }

    function onExport() {
        $("#grid").dxDataGrid("instance").exportToExcel(false);
    }

    function onCellPrepared(e) {
        if (e.rowType === "header") {
            e.cellElement.addClass("columnHeaderCSS");
            e.cellElement.find("input").addClass("columnHeaderCSS");
        }
    }

    function getRowSelectedId() {
        var grid = $("#grid").dxDataGrid("instance");
        var selectedRowsData = grid.getSelectedRowsData();
        var Id = 0;

        if (selectedRowsData.length > 0) {
            Id = selectedRowsData[0].TipoUsuarioId;
        }

        return Id;

        //alert(JSON.stringify(grid.getSelectedRowsData()));

        //var selectedRowKeys = grid.getSelectedRowKeys;
        //alert(selectedRowKeys[0]);
    }
</script>
